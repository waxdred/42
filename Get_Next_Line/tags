!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BUFFER_SIZE	includes/get_next_line.h	/^# define BUFFER_SIZE=/;"	d
CC	Makefile	/^CC = gcc$/;"	m
FLAGS	Makefile	/^FLAGS = -Wall -Werror -Wextra$/;"	m
GET_NEXT_LINE_H	includes/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
HEADER	Makefile	/^HEADER = \/libft\/libft.h$/;"	m
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
LIBLST	Makefile	/^LIBLST  = libft\/lib_lst\/ft_lstadd_back.c \\$/;"	m
LIBMEM	Makefile	/^LIBMEM  = libft\/lib_mem\/ft_bzero.c	 \\$/;"	m
LIBPRINT	Makefile	/^LIBPRINT= libft\/lib_print\/ft_putchar_fd.c  \\$/;"	m
LIBSTR	Makefile	/^LIBSTR  = libft\/lib_str\/ft_atoi.c	 \\$/;"	m
LSTO	Makefile	/^LSTO = $(LIBLST:.c=.o)$/;"	m
MAIN	Makefile	/^MAIN = main.c$/;"	m
MAINO	Makefile	/^MAINO = $(MAIN:.c=.o)$/;"	m
MEMO	Makefile	/^MEMO = $(LIBMEM:.c=.o)$/;"	m
NAME	Makefile	/^NAME = libft.a$/;"	m
PRINTO	Makefile	/^PRINTO = $(LIBPRINT:.c=.o)$/;"	m
STRO	Makefile	/^STRO = $(LIBSTR:.c=.o)$/;"	m
content	libft/libft.h	/^	void			*content;$/;"	m	struct:s_list
ft_atoi	libft/lib_str/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_bzero	libft/lib_mem/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_calloc	libft/lib_mem/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_complet	libft/lib_str/ft_itoa.c	/^static char	*ft_complet(char *str, long long int n, int len)$/;"	f	file:
ft_isalnum	libft/lib_str/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f
ft_isalpha	libft/lib_str/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f
ft_isascii	libft/lib_str/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f
ft_isdigit	libft/lib_str/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f
ft_isprint	libft/lib_str/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f
ft_itoa	libft/lib_str/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_joint	libft/lib_str/ft_strjoin.c	/^char	*ft_joint(char *dest, char const *s2, unsigned int i, char *tmp)$/;"	f
ft_len_str	libft/lib_str/ft_itoa.c	/^static int	ft_len_str(long long int n)$/;"	f	file:
ft_lstadd_back	libft/lib_lst/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **alst, t_list *new)$/;"	f
ft_lstadd_front	libft/lib_lst/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **alst, t_list *new)$/;"	f
ft_lstclear	libft/lib_lst/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void*))$/;"	f
ft_lstdelone	libft/lib_lst/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f
ft_lstiter	libft/lib_lst/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f
ft_lstlast	libft/lib_lst/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f
ft_lstmap	libft/lib_lst/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f
ft_lstnew	libft/lib_lst/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f
ft_lstsize	libft/lib_lst/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f
ft_memchr	libft/lib_mem/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/lib_mem/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/lib_mem/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memmove	libft/lib_mem/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	libft/lib_mem/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_putchar_fd	libft/lib_print/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl_fd	libft/lib_print/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putnbr_fd	libft/lib_print/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr_fd	libft/lib_print/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f
ft_split	libft/lib_str/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f
ft_strchr	libft/lib_str/ft_strchr.c	/^char	*ft_strchr(const char *str, int c)$/;"	f
ft_strcpy	libft/lib_mem/ft_strdup.c	/^static char	*ft_strcpy(char *dest, const char *src)$/;"	f	file:
ft_strdup	libft/lib_mem/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_striteri	libft/lib_str/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f
ft_strjoin	libft/lib_str/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	libft/lib_str/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlcpy	libft/lib_str/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	libft/lib_str/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f
ft_strmapi	libft/lib_str/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncmp	libft/lib_str/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strndup	libft/lib_str/ft_split.c	/^static char	*ft_strndup(const char *s, size_t size)$/;"	f	file:
ft_strnstr	libft/lib_str/ft_strnstr.c	/^char	*ft_strnstr(const char *str, const char *to_found, size_t n)$/;"	f
ft_strrchr	libft/lib_str/ft_strrchr.c	/^char	*ft_strrchr(const char *str, int c)$/;"	f
ft_strtrim	libft/lib_str/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_substr	libft/lib_str/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f
ft_tolower	libft/lib_str/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f
ft_toupper	libft/lib_str/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f
get_next_line	srcs/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
main	main.c	/^int main(int argv, char **argc)$/;"	f
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
s_list	libft/libft.h	/^typedef struct s_list$/;"	s
split_len	libft/lib_str/ft_split.c	/^static int	split_len(const char *str, char c)$/;"	f	file:
t_list	libft/libft.h	/^}			t_list;$/;"	t	typeref:struct:s_list
